version: 2.1

jobs:
  build:
    docker:
      - image: node:12
    steps:
      - checkout
      - run: mv .npmrc-ci .npmrc
      - run: npm ci
      - run:
          name: Create aws credentials file
          command: mkdir ~/.aws && touch ~/.aws/credentials
      - run:
          name: Initialize AWS Credentials for dev
          command: |
            echo "Deploying development keys"
            printf "\n\n[default]\naws_access_key_id = $awskeys_id_dev\naws_secret_access_key=$awskeys_secret_dev" >> ~/.aws/credentials
            printf "\n\n[towbe-dev]\naws_access_key_id = $awskeys_id_dev\naws_secret_access_key=$awskeys_secret_dev" >> ~/.aws/credentials
      - run:
          name: Deploy to dev
          command: npm run deploy
          environment:
            BUCKET_PREFIX: dev

  build-prod:
    docker:
      - image: node:12
    steps:
      - checkout
      - run: mv .npmrc-ci .npmrc
      - run: npm ci
      - run:
          name: Create aws credentials file
          command: mkdir ~/.aws && touch ~/.aws/credentials
      - run:
          name: Initialize AWS Credentials for dev
          command: |
            echo "Deploying development keys"
            printf "\n\n[default]\naws_access_key_id = $awskeys_id_dev\naws_secret_access_key=$awskeys_secret_dev" >> ~/.aws/credentials
            printf "\n\n[towbe-dev]\naws_access_key_id = $awskeys_id_dev\naws_secret_access_key=$awskeys_secret_dev" >> ~/.aws/credentials
            printf "\n\n[towbe-prod]\naws_access_key_id = $awskeys_id_prod\naws_secret_access_key=$awskeys_secret_prod" >> ~/.aws/credentials
      - run:
          name: Deploy to production
          command: npm run deploy
          environment:
            AWS_PROFILE: towbe-prod
            BUCKET_PREFIX: com

  test:
    docker:
      - image: node:12
    steps:
      - checkout
      - run: mv .npmrc-ci .npmrc
      - run: npm ci

workflows:
  version: 2
  build:
    jobs:
      - build:
          context: awscreds
          filters:
            branches:
              only:
                - master
      - approve-prod:
          type: approval
          requires:
            - build
      - build-prod:
          context: awscreds
          filters:
            branches:
              only:
                - master
          requires:
            - approve-prod
  test:
    jobs:
      - test:
          context: npm-dep
          filters:
            branches:
              ignore:
                - master
